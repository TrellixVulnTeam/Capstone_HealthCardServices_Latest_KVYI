{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/simvi/Desktop/Capstone Project/Capstone_HealthCardServices_Latest/FrontEnd/HealthCardServices-FrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { TestBed, waitForAsync } from '@angular/core/testing';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login.component';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { ToastrModule } from 'ngx-toastr';\nimport { RouterTestingModule } from '@angular/router/testing';\ndescribe('LoginComponent', () => {\n  let component;\n  let fixture;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      imports: [ReactiveFormsModule, HttpClientTestingModule, FormsModule, ToastrModule.forRoot(), RouterTestingModule],\n      declarations: [LoginComponent]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(LoginComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should', waitForAsync(() => {\n    spyOn(component, 'OnSubmit');\n    let button = fixture.debugElement.nativeElement.querySelector('button');\n    button.click();\n    fixture.whenStable().then(() => {\n      expect(component.OnSubmit).toHaveBeenCalled();\n    });\n  }));\n  /*\r\n  it('TEST a Form Group ELEMENT COUNT', () => {\r\n    const formElement = fixture.debugElement.nativeElement.querySelector('#form');\r\n    const inputElements = formElement.querySelectorAll('input');\r\n    expect (inputElements.length).toEqual(2);\r\n  });\r\n  */\n});","map":{"version":3,"sources":["C:\\Users\\simvi\\Desktop\\Capstone Project\\Capstone_HealthCardServices_Latest\\FrontEnd\\HealthCardServices-FrontEnd\\src\\app\\components\\login\\login.component.spec.ts"],"names":[],"mappings":";AAAA,SAA2B,OAA3B,EAAoC,YAApC,QAAwD,uBAAxD;AACA,SAAS,WAAT,EAAsB,mBAAtB,QAAiD,gBAAjD;AACA,SAAS,cAAT,QAA+B,mBAA/B;AACA,SAAS,uBAAT,QAA+D,8BAA/D;AACA,SAAS,YAAT,QAA6B,YAA7B;AACA,SAAS,mBAAT,QAAoC,yBAApC;AAEA,QAAQ,CAAC,gBAAD,EAAmB,MAAK;AAC9B,MAAI,SAAJ;AACA,MAAI,OAAJ;AAEA,EAAA,UAAU,iCAAC,aAAW;AACpB,UAAM,OAAO,CAAC,sBAAR,CAA+B;AACnC,MAAA,OAAO,EAAE,CACP,mBADO,EAEP,uBAFO,EAGP,WAHO,EAIP,YAAY,CAAC,OAAb,EAJO,EAKP,mBALO,CAD0B;AAQnC,MAAA,YAAY,EAAE,CAAE,cAAF;AARqB,KAA/B,EAUL,iBAVK,EAAN;AAWD,GAZS,EAAV;AAcA,EAAA,UAAU,CAAC,MAAK;AACd,IAAA,OAAO,GAAG,OAAO,CAAC,eAAR,CAAwB,cAAxB,CAAV;AACA,IAAA,SAAS,GAAG,OAAO,CAAC,iBAApB;AACA,IAAA,OAAO,CAAC,aAAR;AACD,GAJS,CAAV;AAMA,EAAA,EAAE,CAAC,eAAD,EAAkB,MAAK;AACvB,IAAA,MAAM,CAAC,SAAD,CAAN,CAAkB,UAAlB;AACD,GAFC,CAAF;AAIA,EAAA,EAAE,CAAC,QAAD,EAAW,YAAY,CAAC,MAAK;AAC7B,IAAA,KAAK,CAAC,SAAD,EAAY,UAAZ,CAAL;AAEA,QAAI,MAAM,GAAG,OAAO,CAAC,YAAR,CAAqB,aAArB,CAAmC,aAAnC,CAAiD,QAAjD,CAAb;AACA,IAAA,MAAM,CAAC,KAAP;AAEA,IAAA,OAAO,CAAC,UAAR,GAAqB,IAArB,CAA0B,MAAK;AAC7B,MAAA,MAAM,CAAC,SAAS,CAAC,QAAX,CAAN,CAA2B,gBAA3B;AACD,KAFD;AAGD,GATwB,CAAvB,CAAF;AAWA;;;;;;AAME;AAEH,CA/CO,CAAR","sourcesContent":["import { ComponentFixture, TestBed, waitForAsync } from '@angular/core/testing';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { LoginComponent } from './login.component';\r\nimport { HttpClientTestingModule, HttpTestingController } from '@angular/common/http/testing';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { RouterTestingModule } from '@angular/router/testing';\r\n\r\ndescribe('LoginComponent', () => {\r\n  let component: LoginComponent;\r\n  let fixture: ComponentFixture<LoginComponent>;\r\n\r\n  beforeEach(async () => {\r\n    await TestBed.configureTestingModule({\r\n      imports: [\r\n        ReactiveFormsModule,\r\n        HttpClientTestingModule,\r\n        FormsModule,\r\n        ToastrModule.forRoot(),\r\n        RouterTestingModule\r\n      ],\r\n      declarations: [ LoginComponent ]\r\n    })\r\n    .compileComponents();\r\n  });\r\n\r\n  beforeEach(() => {\r\n    fixture = TestBed.createComponent(LoginComponent);\r\n    component = fixture.componentInstance;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('should create', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n\r\n  it('should', waitForAsync(() => {\r\n    spyOn(component, 'OnSubmit');\r\n  \r\n    let button = fixture.debugElement.nativeElement.querySelector('button');\r\n    button.click();\r\n  \r\n    fixture.whenStable().then(() => {\r\n      expect(component.OnSubmit).toHaveBeenCalled();\r\n    });\r\n  }));\r\n\r\n  /*\r\n  it('TEST a Form Group ELEMENT COUNT', () => {\r\n    const formElement = fixture.debugElement.nativeElement.querySelector('#form');\r\n    const inputElements = formElement.querySelectorAll('input');\r\n    expect (inputElements.length).toEqual(2);\r\n  });\r\n  */\r\n\r\n});\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}