{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/simvi/Desktop/Capstone Project/Capstone_HealthCardServices_Latest/FrontEnd/HealthCardServices-FrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { async, TestBed } from '@angular/core/testing';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { By } from '@angular/platform-browser';\nimport { UserHomeComponent } from './user-home.component';\ndescribe('UserHomeComponent', () => {\n  let component;\n  let fixture;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      imports: [ReactiveFormsModule],\n      declarations: [UserHomeComponent]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(UserHomeComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('UpdateAccount Info button is clicked', async(() => {\n    let button = fixture.debugElement.query(By.css('.btn.btn-primary.updateAccountInfo')).nativeElement;\n    button.click();\n    fixture.detectChanges();\n    fixture.whenStable().then(() => {\n      //expect(button.clickEvent).toHaveBeenCalled();\n      expect(component.updateAccountInfoFormVisible).toBe(true);\n      expect(component.showRecommendation).toBe(true);\n    });\n  }));\n});","map":{"version":3,"sources":["C:\\Users\\simvi\\Desktop\\Capstone Project\\Capstone_HealthCardServices_Latest\\FrontEnd\\HealthCardServices-FrontEnd\\src\\app\\components\\user-home\\user-home.component.spec.ts"],"names":[],"mappings":";AAAA,SAAS,KAAT,EAAkC,OAAlC,QAAiD,uBAAjD;AACA,SAAS,mBAAT,QAAoC,gBAApC;AACA,SAAS,EAAT,QAAmB,2BAAnB;AAEA,SAAS,iBAAT,QAAkC,uBAAlC;AAEA,QAAQ,CAAC,mBAAD,EAAsB,MAAK;AACjC,MAAI,SAAJ;AACA,MAAI,OAAJ;AAEA,EAAA,UAAU,iCAAC,aAAW;AACpB,UAAM,OAAO,CAAC,sBAAR,CAA+B;AACnC,MAAA,OAAO,EAAE,CACP,mBADO,CAD0B;AAInC,MAAA,YAAY,EAAE,CAAE,iBAAF;AAJqB,KAA/B,EAML,iBANK,EAAN;AAOD,GARS,EAAV;AAUA,EAAA,UAAU,CAAC,MAAK;AACd,IAAA,OAAO,GAAG,OAAO,CAAC,eAAR,CAAwB,iBAAxB,CAAV;AACA,IAAA,SAAS,GAAG,OAAO,CAAC,iBAApB;AACA,IAAA,OAAO,CAAC,aAAR;AACD,GAJS,CAAV;AAMA,EAAA,EAAE,CAAC,eAAD,EAAkB,MAAK;AACvB,IAAA,MAAM,CAAC,SAAD,CAAN,CAAkB,UAAlB;AACD,GAFC,CAAF;AAIA,EAAA,EAAE,CAAC,sCAAD,EAAyC,KAAK,CAAC,MAAK;AAEpD,QAAI,MAAM,GAAG,OAAO,CAAC,YAAR,CAAqB,KAArB,CAA2B,EAAE,CAAC,GAAH,CAAO,oCAAP,CAA3B,EAAyE,aAAtF;AAEA,IAAA,MAAM,CAAC,KAAP;AACA,IAAA,OAAO,CAAC,aAAR;AAEA,IAAA,OAAO,CAAC,UAAR,GAAqB,IAArB,CAA0B,MAAK;AAC7B;AACA,MAAA,MAAM,CAAC,SAAS,CAAC,4BAAX,CAAN,CAA+C,IAA/C,CAAoD,IAApD;AACA,MAAA,MAAM,CAAC,SAAS,CAAC,kBAAX,CAAN,CAAqC,IAArC,CAA0C,IAA1C;AACD,KAJD;AAKD,GAZ+C,CAA9C,CAAF;AAgBD,CAxCO,CAAR","sourcesContent":["import { async, ComponentFixture, TestBed } from '@angular/core/testing';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { By } from '@angular/platform-browser';\r\n\r\nimport { UserHomeComponent } from './user-home.component';\r\n\r\ndescribe('UserHomeComponent', () => {\r\n  let component: UserHomeComponent;\r\n  let fixture: ComponentFixture<UserHomeComponent>;\r\n\r\n  beforeEach(async () => {\r\n    await TestBed.configureTestingModule({\r\n      imports: [\r\n        ReactiveFormsModule\r\n      ],\r\n      declarations: [ UserHomeComponent ]\r\n    })\r\n    .compileComponents();\r\n  });\r\n\r\n  beforeEach(() => {\r\n    fixture = TestBed.createComponent(UserHomeComponent);\r\n    component = fixture.componentInstance;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('should create', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n\r\n  it('UpdateAccount Info button is clicked', async(() => {\r\n    \r\n    let button = fixture.debugElement.query(By.css('.btn.btn-primary.updateAccountInfo')).nativeElement;\r\n    \r\n    button.click();\r\n    fixture.detectChanges();\r\n\r\n    fixture.whenStable().then(() => {\r\n      //expect(button.clickEvent).toHaveBeenCalled();\r\n      expect(component.updateAccountInfoFormVisible).toBe(true);\r\n      expect(component.showRecommendation).toBe(true);\r\n    });\r\n  }));\r\n\r\n\r\n\r\n});\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}